/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { GLTFResult } from "../../types/global";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

export function Html(props:any) {
  const { nodes, materials } = useGLTF("models/html.glb") as GLTFResult;
  const groupRef = useRef<any>();
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y += 0.03;
      groupRef.current.rotation.x += 0.01;
      groupRef.current.rotation.z += 0.01;
    }
  });
  return (
    <group {...props} dispose={null} ref={groupRef} scale={0.08}>
      <group position={[0, 3.953, 0]} scale={2.24}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube019.geometry}
          material={materials.Orange}
          position={[-0.014, -0.146, -0.131]}
          scale={1.693}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube020.geometry}
          material={materials.White}
          position={[-0.171, -0.226, 0.139]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("models/html.glb");
