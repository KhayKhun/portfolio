/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { GLTFResult } from "../../types/global";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

export function Facebook(props:any) {
  const { nodes, materials } = useGLTF("models/fb.glb") as GLTFResult;
  const groupRef = useRef<any>();
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y -= 0.01;
      groupRef.current.rotation.x += 0.01;
    }
  });
  return (
    <group
      {...props}
      dispose={null}
      position={props.position}
      scale={0.2}
      ref={groupRef}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials["Material.001"]}
        position={[-0.962, 2.709, 0.313]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={materials["Material.002"]}
        position={[-1.017, 2.219, 0.626]}
      />
    </group>
  );
}

useGLTF.preload("models/fb.glb");
