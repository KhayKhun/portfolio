/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { GLTFResult } from "../../types/global";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

export function Github(props:any) {
  const { nodes, materials } = useGLTF("models/gh.glb") as GLTFResult;
  const groupRef = useRef<any>();
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y -= 0.03;
    //   groupRef.current.rotation.x -= 0.05;
    }
  });
  return (
    <group
      {...props}
      dispose={null}
      scale={0.2}
      position={props.position}
      ref={groupRef}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials["Material Purple.002"]}
        position={[0.026, 0.046, -0.111]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={3.602}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve001.geometry}
        material={materials["Material White.001"]}
        position={[-0.046, -0.082, 0.197]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[290.005, 209.812, 290.005]}
      />
    </group>
  );
}

useGLTF.preload("models/gh.glb");
