/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { GLTFResult } from "../../types/global";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

export function Css(props:any) {
  const { nodes, materials } = useGLTF("models/css.glb") as GLTFResult;
  const groupRef = useRef<any>();
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y -= 0.03;
      groupRef.current.rotation.z -= 0.03;
    }
  });
  return (
    <group {...props} dispose={null} ref={groupRef} scale={3}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve002.geometry}
        material={materials["SVGMat.002"]}
        position={[-0.025, 0.06, -0.018]}
        rotation={[Math.PI / 2, 0.181, -Math.PI / 2]}
        scale={0.735}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve.geometry}
        material={materials["Material.007"]}
        position={[-0.03, 0.046, -0.018]}
        rotation={[Math.PI / 2, 0.191, -Math.PI / 2]}
      />
    </group>
  );
}

useGLTF.preload("models/css.glb");
